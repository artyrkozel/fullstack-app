openapi: 3.0.0
paths:
  /user:
    post:
      operationId: UserController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDto'
      responses:
        '201':
          description: ''
      tags:
        - User
  /user/{idOrEmail}:
    get:
      operationId: UserController_findOne
      parameters:
        - name: idOrEmail
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
      tags:
        - User
  /user/{id}:
    delete:
      operationId: UserController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
      tags:
        - User
  /auth/register:
    post:
      operationId: AuthController_register
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterDto'
      responses:
        '201':
          description: ''
      tags:
        - Auth
  /auth/login:
    post:
      operationId: AuthController_login
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginDto'
      responses:
        '201':
          description: ''
      tags:
        - Auth
  /auth/logout:
    get:
      operationId: AuthController_logout
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - Auth
  /auth/refresh-tokens:
    get:
      operationId: AuthController_refreshTokens
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - Auth
  /coins/list:
    get:
      operationId: ConinsController_getCoinsList
      parameters:
        - name: limit
          required: true
          in: query
          schema:
            type: number
        - name: page
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
      tags:
        - Conins
  /coins/{coinId}:
    get:
      operationId: ConinsController_getCoinBuId
      parameters:
        - name: coinId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoinResponse'
      tags:
        - Conins
info:
  title: Block list
  description: ''
  version: 1.0.0
  contact: {}
tags: []
servers: []
components:
  schemas:
    CreateUserDto:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        roles:
          type: array
          items:
            type: string
      required:
        - email
        - password
        - roles
    UserResponse:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        updatedAt:
          format: date-time
          type: string
        roles:
          type: array
          items:
            type: string
      required:
        - id
        - email
        - updatedAt
        - roles
    RegisterDto:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        passwordRepeat:
          type: string
      required:
        - email
        - password
        - passwordRepeat
    LoginDto:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password
    CoinResponse:
      type: object
      properties:
        uuid:
          type: string
        symbol:
          type: string
        name:
          type: string
        color:
          type: string
        iconUrl:
          type: string
        marketCap:
          type: string
        price:
          type: string
        listedAt:
          type: number
        change:
          type: string
        rank:
          type: number
        sparkline:
          type: array
          items:
            type: string
        lowVolume:
          type: boolean
        coinrankingUrl:
          type: string
        24hVolume:
          type: string
        btcPrice:
          type: string
        contractAddresses:
          type: array
          items:
            type: string
      required:
        - uuid
        - symbol
        - name
        - color
        - iconUrl
        - marketCap
        - price
        - listedAt
        - change
        - rank
        - sparkline
        - lowVolume
        - coinrankingUrl
        - 24hVolume
        - btcPrice
        - contractAddresses
